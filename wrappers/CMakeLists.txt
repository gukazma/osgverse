SET(LIB_NAME osgVerseWrappers)
SET(LIBRARY_FILES
    DracoWrapper.cpp Export.h
)

IF(OSG_MAJOR_VERSION GREATER 2 AND OSG_MINOR_VERSION GREATER 4)
    SET(LIBRARY_FILES ${LIBRARY_FILES}
        WrapperMethods.cpp Geometry_FixedWrapper.cpp)
ENDIF()

ADD_DEFINITIONS(-DVERSE_WRAPPERS_LIBRARY)
IF(DRACO_FOUND)
    ADD_DEFINITIONS(-DVERSE_USE_DRACO)
ENDIF(DRACO_FOUND)

IF(VERSE_STATIC_BUILD)
    NEW_LIBRARY(${LIB_NAME} STATIC)
ELSE()
    NEW_LIBRARY(${LIB_NAME} SHARED)
ENDIF()

TARGET_COMPILE_OPTIONS(${LIB_NAME} PUBLIC -D_SCL_SECURE_NO_WARNINGS)
TARGET_LINK_LIBRARIES(${LIB_NAME} osgVerseDependency osgVerseAnimation osgVerseModeling
                      osgVersePipeline osgVerseReaderWriter)
LINK_OSG_LIBRARY(${LIB_NAME} OpenThreads osg osgDB osgUtil osgGA osgViewer)

INSTALL(TARGETS ${LIB_NAME} EXPORT ${LIB_NAME}
        RUNTIME DESTINATION ${INSTALL_BINDIR} COMPONENT libosgverse
        LIBRARY DESTINATION ${INSTALL_LIBDIR} COMPONENT libosgverse
        ARCHIVE DESTINATION ${INSTALL_ARCHIVEDIR} COMPONENT libosgverse-dev)
IF(NOT VERSE_STATIC_BUILD)
    IF(MSVC AND VERSE_INSTALL_PDB_FILES)
        INSTALL(FILES $<TARGET_PDB_FILE:${LIB_NAME}> DESTINATION ${INSTALL_BINDIR} OPTIONAL)
    ENDIF()
ENDIF()
